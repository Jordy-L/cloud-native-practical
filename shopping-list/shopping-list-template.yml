# Templates

## Deployment

apiVersion: apps.openshift.io/v1
kind: DeploymentConfig
metadata:
  annotations:
    openshift.io/generated-by: OpenShiftNewApp
  creationTimestamp: '2020-12-09T08:01:15Z'
  generation: 2
  labels:
    app: cloud-native-practical
  name: cloud-native-practical
  namespace: shopping-list2
  resourceVersion: '4864292'
  selfLink: >-
      /apis/apps.openshift.io/v1/namespaces/shopping-list2/deploymentconfigs/cloud-native-practical
  uid: b618a49a-39f4-11eb-b94e-0a0aabdae787
  ##name: shopping-list-deployment
  ##annotations:
  ##version: 0.0.1-SNAPSHOT
spec:
  replicas: 1
  template:
    metadata:
      labels:
        name: shopping-list
        component: shopping-list
    spec:
      containers:
        - name: shopping-list
          image: shopping-list:0.0.1-SNAPSHOT
          ports:
            - containerPort: 8080
            - containerPort: 8443
          lifecycle:
            preStop:
              exec:
                # SIGTERM triggers a quick exit; gracefully terminate instead
                command: ["kill", "-SIGINT", "`pidof java`"]
          readinessProbe:
            httpGet:
              path: /actuator/health/readiness
              port: 8080
              initialDelaySeconds: 3
              periodSeconds: 3
          livenessProbe:
            httpGet:
              path: /actuator/health/liveness
              port: 8080
              initialDelaySeconds: 3
              periodSeconds: 3
          resources:
            requests:
              memory: "64Mi"
              cpu: "250m"
            limits:
              memory: "128Mi"
              cpu: "500m"
          env:
            - name: SPRING_PROFILES_ACTIVE
              value: "hsqldb"
---
## Service

kind: Service
apiVersion: v1
metadata:
  name: shopping-list
spec:
  selector:
    app: shopping-list
  ports:
    - name: port1
      protocol: TCP
      port: 80
      targetPort: 8080
    - name: port2
      protocol: TCP
      port: 443
      targetPort: 8443
  type: LoadBalancer

---
## Route
apiVersion: v1
kind: Route
metadata:
  name: shopping-list
spec:
  #host: www.example.com
  to:
    kind: Service
    name: shopping-list
  tls:
    termination: passthrough
